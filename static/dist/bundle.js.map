{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/examples/MouseDrivenVerticalCarousel/MouseDrivenVerticalCarousel.js","static/js/examples/TemplateExample/TemplateComponent.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import gsap from \"gsap\";\n\nexport default class VerticalMouseDrivenCarousel {\n    constructor() {\n        this.defaults = {\n            carousel: \".js-mouse-driven-vertical-carousel\",\n            bgImg: \".js-mouse-driven-vertical-carousel-bg-img\",\n            list: \".js-mouse-driven-vertical-carousel-list\",\n            listItem: \".js-mouse-driven-vertical-carousel-list-item\"\n        };\n\n        this.posY = 0;\n\n        this.initCursor();\n        this.init();\n        this.bgImgController();\n    }\n\n    //region getters\n    getBgImgs() {\n        return document.querySelectorAll(this.defaults.bgImg);\n    }\n\n    getListItems() {\n        return document.querySelectorAll(this.defaults.listItem);\n    }\n\n    getList() {\n        return document.querySelector(this.defaults.list);\n    }\n\n    getCarousel() {\n        return document.querySelector(this.defaults.carousel);\n    }\n\n    init() {\n        gsap.set(this.getBgImgs(), {\n            autoAlpha: 0,\n            scale: 1.05,\n            overwrite: true\n        });\n\n        gsap.set(this.getBgImgs()[0], {\n            autoAlpha: 1,\n            scale: 1,\n            overwrite: true\n        });\n\n        this.listItems = this.getListItems().length - 1;\n\n        this.listOpacityController(0);\n    }\n\n    initCursor() {\n        const listHeight = this.getList().clientHeight;\n        const carouselHeight = this.getCarousel().clientHeight;\n\n        this.getCarousel().addEventListener(\n            \"mousemove\",\n            event => {\n                this.posY = event.pageY - this.getCarousel().offsetTop;\n                let offset = -this.posY / carouselHeight * listHeight;\n\n                gsap.to(this.getList(), {\n                    duration: 0.3,\n                    y: offset,\n                    ease: \"power4.out\",\n                    overwrite: true\n                });\n            },\n            false\n        );\n    }\n\n    bgImgController() {\n        for (const link of this.getListItems()) {\n            link.addEventListener(\"mouseenter\", ev => {\n                let currentId = ev.currentTarget.dataset.itemId;\n\n                this.listOpacityController(currentId);\n\n                gsap.to(ev.currentTarget, {\n                    duration: 0.3,\n                    autoAlpha: 1,\n                    overwrite: true\n                });\n\n                gsap.to(\".is-visible\", {\n                    duration: 0.2,\n                    autoAlpha: 0,\n                    scale: 1.05,\n                    overwrite: true\n                });\n\n                if (!this.getBgImgs()[currentId].classList.contains(\"is-visible\")) {\n                    this.getBgImgs()[currentId].classList.add(\"is-visible\");\n                }\n\n                gsap.to(this.getBgImgs()[currentId], {\n                    duration: 0.6,\n                    autoAlpha: 1,\n                    scale: 1,\n                    overwrite: true\n                });\n            });\n        }\n    }\n\n    listOpacityController(id) {\n        id = parseInt(id);\n        let aboveCurrent = this.listItems - id;\n        let belowCurrent = parseInt(id);\n\n        if (aboveCurrent > 0) {\n            for (let i = 1; i <= aboveCurrent; i++) {\n                let opacity = 0.5 / i;\n                let offset = 2 * i;\n                gsap.to(this.getListItems()[id + i], {\n                    duration: 0.5,\n                    autoAlpha: opacity,\n                    x: `${offset}vw`,\n                    ease: \"power3.out\",\n                    overwrite: true\n                });\n            }\n        }\n\n        if (belowCurrent > 0) {\n            for (let i = 0; i <= belowCurrent; i++) {\n                let opacity = 0.5 / i;\n                let offset = 2 * i;\n                gsap.to(this.getListItems()[id - i], {\n                    duration: 0.5,\n                    autoAlpha: opacity,\n                    x: `${offset}vw`,\n                    ease: \"power3.out\",\n                    overwrite: true\n                });\n            }\n        }\n    }\n}\n","/**\n * Template component\n * explain what this class is doing\n */\nexport default class TemplateComponent {\n    constructor() {\n        /**\n         * Template component DOM selectors\n         * @type {{templateComponentArray: string, templateComponent: string, states: {isActive: string}}}\n         */\n        this.DOM = {\n            templateComponent: \".js-template-component\",\n            templateComponentArray: \".js-template-component-array\",\n            states: {\n                isActive: \"is-active\",\n            },\n        };\n\n        /**\n         * Fetch template component DOM element\n         * @type {Element}\n         */\n        this.templateComponent = document.querySelector(this.DOM.templateComponent);\n\n        /**\n         * Fetch template component list of DOM elements\n         * @type {NodeListOf<Element>}\n         */\n        this.templateComponentArray = document.querySelectorAll(this.DOM.templateComponentArray);\n    }\n\n    /**\n     * Init\n     */\n    init() {\n        if (this.templateComponent === null) {\n            return;\n        }\n        // if (this.templateComponentArray.length < 1) {\n        //     return;\n        // }\n        console.log(\"Template component init\");\n        this.templateMethod();\n    }\n\n    /**\n     * Template method\n     * explain what this method is doing\n     */\n    templateMethod() {\n        console.log(\"Template method init\");\n    }\n}\n","/**\n * MAIN JS FILE\n */\n\n/**\n * Helpers\n * Imports of helper functions are stripped out of bundle\n * Include them within \"start-strip-code\" and \"end-strip-code\" comments\n */\n\n/**\n * Components\n */\nimport TemplateComponent from \"./examples/TemplateExample/TemplateComponent\";\nimport VerticalMouseDrivenCarousel from \"./examples/MouseDrivenVerticalCarousel/MouseDrivenVerticalCarousel\";\n\n/**\n * Check if document is ready cross-browser\n * @param callback\n */\nconst ready = (callback) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callback();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callback();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    /**\n     * HELPERS INIT\n     * Only init helpers if they exist\n     * Will be undefined on production because of import stripping\n     */\n\n    /**\n     * CREDITS INIT\n     */\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n    console.info(\"dev by: %c Bornfight FE Team \", credits);\n\n    /**\n     * COMPONENTS INIT\n     */\n\n    /**\n     * Template component\n     * @type {TemplateComponent}\n     */\n    const templateComponent = new TemplateComponent();\n    templateComponent.init();\n\n    /**\n     * VerticalMouseDrivenCarousel component\n     * @type {VerticalMouseDrivenCarousel}\n     */\n    const verticalMouseDrivenCarousel = new VerticalMouseDrivenCarousel();\n    verticalMouseDrivenCarousel.init();\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzdGF0aWMvanMvZXhhbXBsZXMvTW91c2VEcml2ZW5WZXJ0aWNhbENhcm91c2VsL01vdXNlRHJpdmVuVmVydGljYWxDYXJvdXNlbC5qcyIsInN0YXRpYy9qcy9leGFtcGxlcy9UZW1wbGF0ZUV4YW1wbGUvVGVtcGxhdGVDb21wb25lbnQuanMiLCJzdGF0aWMvanMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FDQUE7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUIsMkI7QUFDakIseUNBQWM7QUFBQTs7QUFDVixTQUFLLFFBQUwsR0FBZ0I7QUFDWixNQUFBLFFBQVEsRUFBRSxvQ0FERTtBQUVaLE1BQUEsS0FBSyxFQUFFLDJDQUZLO0FBR1osTUFBQSxJQUFJLEVBQUUseUNBSE07QUFJWixNQUFBLFFBQVEsRUFBRTtBQUpFLEtBQWhCO0FBT0EsU0FBSyxJQUFMLEdBQVksQ0FBWjtBQUVBLFNBQUssVUFBTDtBQUNBLFNBQUssSUFBTDtBQUNBLFNBQUssZUFBTDtBQUNILEcsQ0FFRDs7Ozs7V0FDQSxxQkFBWTtBQUNSLGFBQU8sUUFBUSxDQUFDLGdCQUFULENBQTBCLEtBQUssUUFBTCxDQUFjLEtBQXhDLENBQVA7QUFDSDs7O1dBRUQsd0JBQWU7QUFDWCxhQUFPLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixLQUFLLFFBQUwsQ0FBYyxRQUF4QyxDQUFQO0FBQ0g7OztXQUVELG1CQUFVO0FBQ04sYUFBTyxRQUFRLENBQUMsYUFBVCxDQUF1QixLQUFLLFFBQUwsQ0FBYyxJQUFyQyxDQUFQO0FBQ0g7OztXQUVELHVCQUFjO0FBQ1YsYUFBTyxRQUFRLENBQUMsYUFBVCxDQUF1QixLQUFLLFFBQUwsQ0FBYyxRQUFyQyxDQUFQO0FBQ0g7OztXQUVELGdCQUFPO0FBQ0gsb0JBQUssR0FBTCxDQUFTLEtBQUssU0FBTCxFQUFULEVBQTJCO0FBQ3ZCLFFBQUEsU0FBUyxFQUFFLENB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OUM7QUFDSCxHQUxNLE1BS0E7QUFDSDtBQUNSO0FBQ0E7QUFDUSxJQUFBLFFBQVEsQ0FBQyxXQUFULENBQXFCLG9CQUFyQixFQUEyQyxZQUFZO0FBQ25ELFVBQUksUUFBUSxDQUFDLFVBQVQsS0FBd0IsVUFBNUIsRUFBd0M7QUFDcEMsUUFBQSxRQUFRO0FBQ1g7QUFDSixLQUpEO0FBS0g7QUFDSixDQXJCRDtBQXVCQTtBQUNBO0FBQ0E7OztBQUNBLEtBQUssQ0FBQyxZQUFNO0FBQ1I7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFSTtBQUNKO0FBQ0E7QUFDSSxNQUFNLE9BQU8sR0FBRyxDQUNaLDJCQURZLEVBRVosY0FGWSxFQUdaLGdCQUhZLEVBSVosbUJBSlksRUFLWixvQkFMWSxFQU1aLDJCQU5ZLEVBT1osbUJBUFksRUFRZCxJQVJjLENBUVQsR0FSUyxDQUFoQjtBQVNBLEVBQUEsT0FBTyxDQUFDLElBQVIsQ0FBYSwrQkFBYixFQUE4QyxPQUE5QztBQUVBO0FBQ0o7QUFDQTs7QUFFSTtBQUNKO0FBQ0E7QUFDQTs7QUFDSSxNQUFNLGlCQUFpQixHQUFHLElBQUksMEJBQUosRUFBMUI7QUFDQSxFQUFBLGlCQUFpQixDQUFDLElBQWxCO0FBRUE7QUFDSjtBQUNBO0FBQ0E7O0FBQ0ksTUFBTSwyQkFBMkIsR0FBRyxJQUFJLG9DQUFKLEVBQXBDO0FBQ0EsRUFBQSwyQkFBMkIsQ0FBQyxJQUE1QjtBQUNILENBdENJLENBQUwiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZXJ0aWNhbE1vdXNlRHJpdmVuQ2Fyb3VzZWwge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHRzID0ge1xuICAgICAgICAgICAgY2Fyb3VzZWw6IFwiLmpzLW1vdXNlLWRyaXZlbi12ZXJ0aWNhbC1jYXJvdXNlbFwiLFxuICAgICAgICAgICAgYmdJbWc6IFwiLmpzLW1vdXNlLWRyaXZlbi12ZXJ0aWNhbC1jYXJvdXNlbC1iZy1pbWdcIixcbiAgICAgICAgICAgIGxpc3Q6IFwiLmpzLW1vdXNlLWRyaXZlbi12ZXJ0aWNhbC1jYXJvdXNlbC1saXN0XCIsXG4gICAgICAgICAgICBsaXN0SXRlbTogXCIuanMtbW91c2UtZHJpdmVuLXZlcnRpY2FsLWNhcm91c2VsLWxpc3QtaXRlbVwiXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5wb3NZID0gMDtcblxuICAgICAgICB0aGlzLmluaXRDdXJzb3IoKTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIHRoaXMuYmdJbWdDb250cm9sbGVyKCk7XG4gICAgfVxuXG4gICAgLy9yZWdpb24gZ2V0dGVyc1xuICAgIGdldEJnSW1ncygpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5kZWZhdWx0cy5iZ0ltZyk7XG4gICAgfVxuXG4gICAgZ2V0TGlzdEl0ZW1zKCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLmRlZmF1bHRzLmxpc3RJdGVtKTtcbiAgICB9XG5cbiAgICBnZXRMaXN0KCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmRlZmF1bHRzLmxpc3QpO1xuICAgIH1cblxuICAgIGdldENhcm91c2VsKCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmRlZmF1bHRzLmNhcm91c2VsKTtcbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBnc2FwLnNldCh0aGlzLmdldEJnSW1ncygpLCB7XG4gICAgICAgICAgICBhdXRvQWxwaGE6IDAsXG4gICAgICAgICAgICBzY2FsZTogMS4wNSxcbiAgICAgICAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBnc2FwLnNldCh0aGlzLmdldEJnSW1ncygpWzBdLCB7XG4gICAgICAgICAgICBhdXRvQWxwaGE6IDEsXG4gICAgICAgICAgICBzY2FsZTogMSxcbiAgICAgICAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmxpc3RJdGVtcyA9IHRoaXMuZ2V0TGlzdEl0ZW1zKCkubGVuZ3RoIC0gMTtcblxuICAgICAgICB0aGlzLmxpc3RPcGFjaXR5Q29udHJvbGxlcigwKTtcbiAgICB9XG5cbiAgICBpbml0Q3Vyc29yKCkge1xuICAgICAgICBjb25zdCBsaXN0SGVpZ2h0ID0gdGhpcy5nZXRMaXN0KCkuY2xpZW50SGVpZ2h0O1xuICAgICAgICBjb25zdCBjYXJvdXNlbEhlaWdodCA9IHRoaXMuZ2V0Q2Fyb3VzZWwoKS5jbGllbnRIZWlnaHQ7XG5cbiAgICAgICAgdGhpcy5nZXRDYXJvdXNlbCgpLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcIm1vdXNlbW92ZVwiLFxuICAgICAgICAgICAgZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucG9zWSA9IGV2ZW50LnBhZ2VZIC0gdGhpcy5nZXRDYXJvdXNlbCgpLm9mZnNldFRvcDtcbiAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gLXRoaXMucG9zWSAvIGNhcm91c2VsSGVpZ2h0ICogbGlzdEhlaWdodDtcblxuICAgICAgICAgICAgICAgIGdzYXAudG8odGhpcy5nZXRMaXN0KCksIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAuMyxcbiAgICAgICAgICAgICAgICAgICAgeTogb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICBlYXNlOiBcInBvd2VyNC5vdXRcIixcbiAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXRlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBiZ0ltZ0NvbnRyb2xsZXIoKSB7XG4gICAgICAgIGZvciAoY29uc3QgbGluayBvZiB0aGlzLmdldExpc3RJdGVtcygpKSB7XG4gICAgICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsIGV2ID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgY3VycmVudElkID0gZXYuY3VycmVudFRhcmdldC5kYXRhc2V0Lml0ZW1JZDtcblxuICAgICAgICAgICAgICAgIHRoaXMubGlzdE9wYWNpdHlDb250cm9sbGVyKGN1cnJlbnRJZCk7XG5cbiAgICAgICAgICAgICAgICBnc2FwLnRvKGV2LmN1cnJlbnRUYXJnZXQsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAuMyxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0FscGhhOiAxLFxuICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdGU6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGdzYXAudG8oXCIuaXMtdmlzaWJsZVwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAwLjIsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9BbHBoYTogMCxcbiAgICAgICAgICAgICAgICAgICAgc2NhbGU6IDEuMDUsXG4gICAgICAgICAgICAgICAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmdldEJnSW1ncygpW2N1cnJlbnRJZF0uY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtdmlzaWJsZVwiKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEJnSW1ncygpW2N1cnJlbnRJZF0uY2xhc3NMaXN0LmFkZChcImlzLXZpc2libGVcIik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZ3NhcC50byh0aGlzLmdldEJnSW1ncygpW2N1cnJlbnRJZF0sIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAuNixcbiAgICAgICAgICAgICAgICAgICAgYXV0b0FscGhhOiAxLFxuICAgICAgICAgICAgICAgICAgICBzY2FsZTogMSxcbiAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXRlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxpc3RPcGFjaXR5Q29udHJvbGxlcihpZCkge1xuICAgICAgICBpZCA9IHBhcnNlSW50KGlkKTtcbiAgICAgICAgbGV0IGFib3ZlQ3VycmVudCA9IHRoaXMubGlzdEl0ZW1zIC0gaWQ7XG4gICAgICAgIGxldCBiZWxvd0N1cnJlbnQgPSBwYXJzZUludChpZCk7XG5cbiAgICAgICAgaWYgKGFib3ZlQ3VycmVudCA+IDApIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IGFib3ZlQ3VycmVudDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IG9wYWNpdHkgPSAwLjUgLyBpO1xuICAgICAgICAgICAgICAgIGxldCBvZmZzZXQgPSAyICogaTtcbiAgICAgICAgICAgICAgICBnc2FwLnRvKHRoaXMuZ2V0TGlzdEl0ZW1zKClbaWQgKyBpXSwge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMC41LFxuICAgICAgICAgICAgICAgICAgICBhdXRvQWxwaGE6IG9wYWNpdHksXG4gICAgICAgICAgICAgICAgICAgIHg6IGAke29mZnNldH12d2AsXG4gICAgICAgICAgICAgICAgICAgIGVhc2U6IFwicG93ZXIzLm91dFwiLFxuICAgICAgICAgICAgICAgICAgICBvdmVyd3JpdGU6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChiZWxvd0N1cnJlbnQgPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBiZWxvd0N1cnJlbnQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGxldCBvcGFjaXR5ID0gMC41IC8gaTtcbiAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gMiAqIGk7XG4gICAgICAgICAgICAgICAgZ3NhcC50byh0aGlzLmdldExpc3RJdGVtcygpW2lkIC0gaV0sIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAuNSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0FscGhhOiBvcGFjaXR5LFxuICAgICAgICAgICAgICAgICAgICB4OiBgJHtvZmZzZXR9dndgLFxuICAgICAgICAgICAgICAgICAgICBlYXNlOiBcInBvd2VyMy5vdXRcIixcbiAgICAgICAgICAgICAgICAgICAgb3ZlcndyaXRlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvKipcbiAqIFRlbXBsYXRlIGNvbXBvbmVudFxuICogZXhwbGFpbiB3aGF0IHRoaXMgY2xhc3MgaXMgZG9pbmdcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVtcGxhdGVDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGVtcGxhdGUgY29tcG9uZW50IERPTSBzZWxlY3RvcnNcbiAgICAgICAgICogQHR5cGUge3t0ZW1wbGF0ZUNvbXBvbmVudEFycmF5OiBzdHJpbmcsIHRlbXBsYXRlQ29tcG9uZW50OiBzdHJpbmcsIHN0YXRlczoge2lzQWN0aXZlOiBzdHJpbmd9fX1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuRE9NID0ge1xuICAgICAgICAgICAgdGVtcGxhdGVDb21wb25lbnQ6IFwiLmpzLXRlbXBsYXRlLWNvbXBvbmVudFwiLFxuICAgICAgICAgICAgdGVtcGxhdGVDb21wb25lbnRBcnJheTogXCIuanMtdGVtcGxhdGUtY29tcG9uZW50LWFycmF5XCIsXG4gICAgICAgICAgICBzdGF0ZXM6IHtcbiAgICAgICAgICAgICAgICBpc0FjdGl2ZTogXCJpcy1hY3RpdmVcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZldGNoIHRlbXBsYXRlIGNvbXBvbmVudCBET00gZWxlbWVudFxuICAgICAgICAgKiBAdHlwZSB7RWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudGVtcGxhdGVDb21wb25lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuRE9NLnRlbXBsYXRlQ29tcG9uZW50KTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogRmV0Y2ggdGVtcGxhdGUgY29tcG9uZW50IGxpc3Qgb2YgRE9NIGVsZW1lbnRzXG4gICAgICAgICAqIEB0eXBlIHtOb2RlTGlzdE9mPEVsZW1lbnQ+fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50ZW1wbGF0ZUNvbXBvbmVudEFycmF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLkRPTS50ZW1wbGF0ZUNvbXBvbmVudEFycmF5KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJbml0XG4gICAgICovXG4gICAgaW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMudGVtcGxhdGVDb21wb25lbnQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiAodGhpcy50ZW1wbGF0ZUNvbXBvbmVudEFycmF5Lmxlbmd0aCA8IDEpIHtcbiAgICAgICAgLy8gICAgIHJldHVybjtcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zb2xlLmxvZyhcIlRlbXBsYXRlIGNvbXBvbmVudCBpbml0XCIpO1xuICAgICAgICB0aGlzLnRlbXBsYXRlTWV0aG9kKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGVtcGxhdGUgbWV0aG9kXG4gICAgICogZXhwbGFpbiB3aGF0IHRoaXMgbWV0aG9kIGlzIGRvaW5nXG4gICAgICovXG4gICAgdGVtcGxhdGVNZXRob2QoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVGVtcGxhdGUgbWV0aG9kIGluaXRcIik7XG4gICAgfVxufVxuIiwiLyoqXG4gKiBNQUlOIEpTIEZJTEVcbiAqL1xuXG4vKipcbiAqIEhlbHBlcnNcbiAqIEltcG9ydHMgb2YgaGVscGVyIGZ1bmN0aW9ucyBhcmUgc3RyaXBwZWQgb3V0IG9mIGJ1bmRsZVxuICogSW5jbHVkZSB0aGVtIHdpdGhpbiBcInN0YXJ0LXN0cmlwLWNvZGVcIiBhbmQgXCJlbmQtc3RyaXAtY29kZVwiIGNvbW1lbnRzXG4gKi9cblxuLyoqXG4gKiBDb21wb25lbnRzXG4gKi9cbmltcG9ydCBUZW1wbGF0ZUNvbXBvbmVudCBmcm9tIFwiLi9leGFtcGxlcy9UZW1wbGF0ZUV4YW1wbGUvVGVtcGxhdGVDb21wb25lbnRcIjtcbmltcG9ydCBWZXJ0aWNhbE1vdXNlRHJpdmVuQ2Fyb3VzZWwgZnJvbSBcIi4vZXhhbXBsZXMvTW91c2VEcml2ZW5WZXJ0aWNhbENhcm91c2VsL01vdXNlRHJpdmVuVmVydGljYWxDYXJvdXNlbFwiO1xuXG4vKipcbiAqIENoZWNrIGlmIGRvY3VtZW50IGlzIHJlYWR5IGNyb3NzLWJyb3dzZXJcbiAqIEBwYXJhbSBjYWxsYmFja1xuICovXG5jb25zdCByZWFkeSA9IChjYWxsYmFjaykgPT4ge1xuICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIikge1xuICAgICAgICAvKipcbiAgICAgICAgICogRG9jdW1lbnQgaXMgYWxyZWFkeSByZWFkeSwgY2FsbCB0aGUgY2FsbGJhY2sgZGlyZWN0bHlcbiAgICAgICAgICovXG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSBlbHNlIGlmIChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbGwgbW9kZXJuIGJyb3dzZXJzIHRvIHJlZ2lzdGVyIERPTUNvbnRlbnRMb2FkZWRcbiAgICAgICAgICovXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGNhbGxiYWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvKipcbiAgICAgICAgICogT2xkIElFIGJyb3dzZXJzXG4gICAgICAgICAqL1xuICAgICAgICBkb2N1bWVudC5hdHRhY2hFdmVudChcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBEb2N1bWVudCByZWFkeSBjYWxsYmFja1xuICovXG5yZWFkeSgoKSA9PiB7XG4gICAgLyoqXG4gICAgICogSEVMUEVSUyBJTklUXG4gICAgICogT25seSBpbml0IGhlbHBlcnMgaWYgdGhleSBleGlzdFxuICAgICAqIFdpbGwgYmUgdW5kZWZpbmVkIG9uIHByb2R1Y3Rpb24gYmVjYXVzZSBvZiBpbXBvcnQgc3RyaXBwaW5nXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBDUkVESVRTIElOSVRcbiAgICAgKi9cbiAgICBjb25zdCBjcmVkaXRzID0gW1xuICAgICAgICBcImJhY2tncm91bmQtY29sb3I6ICMwMDAwMDBcIixcbiAgICAgICAgXCJjb2xvcjogd2hpdGVcIixcbiAgICAgICAgXCJkaXNwbGF5OiBibG9ja1wiLFxuICAgICAgICBcImxpbmUtaGVpZ2h0OiAyNHB4XCIsXG4gICAgICAgIFwidGV4dC1hbGlnbjogY2VudGVyXCIsXG4gICAgICAgIFwiYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZlwiLFxuICAgICAgICBcImZvbnQtd2VpZ2h0OiBib2xkXCIsXG4gICAgXS5qb2luKFwiO1wiKTtcbiAgICBjb25zb2xlLmluZm8oXCJkZXYgYnk6ICVjIEJvcm5maWdodCBGRSBUZWFtIFwiLCBjcmVkaXRzKTtcblxuICAgIC8qKlxuICAgICAqIENPTVBPTkVOVFMgSU5JVFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGVtcGxhdGUgY29tcG9uZW50XG4gICAgICogQHR5cGUge1RlbXBsYXRlQ29tcG9uZW50fVxuICAgICAqL1xuICAgIGNvbnN0IHRlbXBsYXRlQ29tcG9uZW50ID0gbmV3IFRlbXBsYXRlQ29tcG9uZW50KCk7XG4gICAgdGVtcGxhdGVDb21wb25lbnQuaW5pdCgpO1xuXG4gICAgLyoqXG4gICAgICogVmVydGljYWxNb3VzZURyaXZlbkNhcm91c2VsIGNvbXBvbmVudFxuICAgICAqIEB0eXBlIHtWZXJ0aWNhbE1vdXNlRHJpdmVuQ2Fyb3VzZWx9XG4gICAgICovXG4gICAgY29uc3QgdmVydGljYWxNb3VzZURyaXZlbkNhcm91c2VsID0gbmV3IFZlcnRpY2FsTW91c2VEcml2ZW5DYXJvdXNlbCgpO1xuICAgIHZlcnRpY2FsTW91c2VEcml2ZW5DYXJvdXNlbC5pbml0KCk7XG59KTtcbiJdfQ=="}